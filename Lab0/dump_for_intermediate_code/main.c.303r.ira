
;; Function main (main, funcdef_no=0, decl_uid=3174, cgraph_uid=1, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 12 count 11 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 5 7 }
;; 7 succs { 8 }
;; 8 succs { 10 9 }
;; 9 succs { }
;; 10 succs { 1 }
Removing SCRATCH to p99 in insn #3 (nop 2)
rescanning insn with uid = 3.
Removing SCRATCH to p100 in insn #73 (nop 3)
rescanning insn with uid = 73.
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 75.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 12 count 11 (    1)

Pass 0 for finding pseudo/allocno costs

    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r95,l0) best SIREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:10000 NO_REX_SSE_REGS:10000 SSE_REGS:10000 MMX_REGS:20000 INT_SSE_REGS:20000 ALL_REGS:302000 MEM:5000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:4000 NO_REX_SSE_REGS:4000 SSE_REGS:4000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:214000 MEM:12000
  a5(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a6(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:4000 NO_REX_SSE_REGS:4000 SSE_REGS:4000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:214000 MEM:12000
  a9(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a10(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a11(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a12(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a13(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a14(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a15(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a16(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a17(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000

   Insn 79(l0): point = 0
   Insn 78(l0): point = 2
   Insn 75(l0): point = 5
   Insn 74(l0): point = 8
   Insn 73(l0): point = 10
   Insn 69(l0): point = 12
   Insn 66(l0): point = 15
   Insn 58(l0): point = 18
   Insn 57(l0): point = 20
   Insn 56(l0): point = 22
   Insn 55(l0): point = 24
   Insn 54(l0): point = 26
   Insn 53(l0): point = 28
   Insn 52(l0): point = 30
   Insn 51(l0): point = 32
   Insn 50(l0): point = 34
   Insn 49(l0): point = 36
   Insn 48(l0): point = 38
   Insn 47(l0): point = 40
   Insn 46(l0): point = 42
   Insn 64(l0): point = 45
   Insn 63(l0): point = 47
   Insn 61(l0): point = 49
   Insn 85(l0): point = 52
   Insn 42(l0): point = 54
   Insn 41(l0): point = 56
   Insn 40(l0): point = 58
   Insn 39(l0): point = 60
   Insn 38(l0): point = 62
   Insn 37(l0): point = 64
   Insn 36(l0): point = 66
   Insn 35(l0): point = 68
   Insn 34(l0): point = 70
   Insn 33(l0): point = 72
   Insn 32(l0): point = 74
   Insn 31(l0): point = 76
   Insn 83(l0): point = 79
   Insn 26(l0): point = 81
   Insn 25(l0): point = 83
   Insn 24(l0): point = 85
   Insn 23(l0): point = 87
   Insn 22(l0): point = 89
   Insn 21(l0): point = 91
   Insn 19(l0): point = 94
   Insn 18(l0): point = 96
   Insn 15(l0): point = 98
   Insn 14(l0): point = 100
   Insn 13(l0): point = 102
   Insn 12(l0): point = 104
   Insn 11(l0): point = 106
   Insn 10(l0): point = 108
   Insn 9(l0): point = 110
   Insn 8(l0): point = 112
   Insn 7(l0): point = 114
   Insn 6(l0): point = 116
   Insn 3(l0): point = 118
 a0(r85): [8..12] [3..4]
 a1(r100): [10..10]
 a2(r84): [79..81] [13..15]
 a3(r83): [48..49]
 a4(r97): [21..22]
 a5(r96): [29..30]
 a6(r95): [33..34]
 a7(r94): [37..38]
 a8(r93): [41..42]
 a9(r92): [59..60]
 a10(r91): [63..64]
 a11(r90): [71..72]
 a12(r89): [75..76]
 a13(r88): [88..89]
 a14(r82): [97..98]
 a15(r87): [105..106]
 a16(r86): [109..110]
 a17(r99): [118..118]
Compressing live ranges: from 121 to 38 - 31%
Ranges after the compression:
 a0(r85): [0..4]
 a1(r100): [3..3]
 a2(r84): [27..28] [5..6]
 a3(r83): [17..18]
 a4(r97): [7..8]
 a5(r96): [9..10]
 a6(r95): [11..12]
 a7(r94): [13..14]
 a8(r93): [15..16]
 a9(r92): [19..20]
 a10(r91): [21..22]
 a11(r90): [23..24]
 a12(r89): [25..26]
 a13(r88): [29..30]
 a14(r82): [31..32]
 a15(r87): [33..34]
 a16(r86): [35..36]
 a17(r99): [37..37]
  pref0:a5(r96)<-hr5@1500
  pref1:a6(r95)<-hr4@1500
  pref2:a9(r92)<-hr5@1500
  pref3:a10(r91)<-hr4@1500
  pref4:a11(r90)<-hr5@1500
  pref5:a12(r89)<-hr4@1500
  pref6:a13(r88)<-hr5@1500
  pref7:a15(r87)<-hr5@1500
  pref8:a16(r86)<-hr4@1500
  pref9:a0(r85)<-hr0@1500
  regions=1, blocks=11, points=38
    allocnos=18 (big 0), copies=0, conflicts=0, ranges=19
Disposition:
   14:r82  l0     0    3:r83  l0     0    2:r84  l0     0    0:r85  l0     0
   16:r86  l0     0   15:r87  l0     0   13:r88  l0     0   12:r89  l0     0
   11:r90  l0     0   10:r91  l0     0    9:r92  l0     0    8:r93  l0     0
    7:r94  l0     0    6:r95  l0     0    5:r96  l0     0    4:r97  l0     0
   17:r99  l0     0    1:r100 l0     1
+++Costs: overall -10000, reg -10000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={13d,7u} r1={7d} r2={7d} r4={12d,5u} r5={12d,5u} r6={1d,10u} r7={1d,16u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,9u} r17={13d,3u} r18={6d} r19={1d,31u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={7d} r37={7d} r38={6d} r39={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r82={1d,1u} r83={1d,1u} r84={2d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r99={1d} r100={1d} 
;;    total ref usage 565{463d,102u,0e} in 56{50 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.3192+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 99)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":9:12 1382 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:DI 99)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S4 A64])
        (const_int 0 [0])) "main.c":12:7 83 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])
        (const_int 1 [0x1])) "main.c":13:7 83 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
        (const_int 1 [0x1])) "main.c":14:7 83 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":16:5 247 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 86)) "main.c":16:5 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x769cfeca86c0 *.LC0>)) "main.c":16:5 82 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 87)) "main.c":16:5 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x769cfeca86c0 *.LC0>)
            (nil))))
(insn 13 12 14 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":16:5 85 {*movqi_internal}
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x769cfefce600 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "main.c":16:5 1013 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 15 14 18 2 (set (reg:SI 82 [ n.0_1 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 n+0 S4 A32])) "main.c":17:11 83 {*movsi_internal}
     (nil))
(insn 18 15 19 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 82 [ n.0_1 ])
            (const_int 50 [0x32]))) "main.c":17:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 82 [ n.0_1 ])
        (nil)))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "main.c":17:8 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 29)
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg:SI 4 si)
        (const_int 50 [0x32])) "main.c":18:9 83 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:DI 88)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x769cfeca8750 *.LC1>)) "main.c":18:9 82 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (reg:DI 88)) "main.c":18:9 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x769cfeca8750 *.LC1>)
            (nil))))
(insn 24 23 25 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":18:9 85 {*movqi_internal}
     (nil))
(call_insn 25 24 26 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x769cfefcca00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":18:9 1013 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 26 25 83 3 (set (reg:SI 84 [ _6 ])
        (const_int 1 [0x1])) "main.c":19:16 83 {*movsi_internal}
     (nil))
(jump_insn 83 26 84 3 (set (pc)
        (label_ref 67)) 996 {jump}
     (nil)
 -> 67)
(barrier 84 83 29)
(code_label 29 84 30 4 2 (nil) [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 4 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S4 A64])) "main.c":22:5 83 {*movsi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:SI 4 si)
        (reg:SI 89)) "main.c":22:5 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(insn 33 32 34 4 (set (reg:DI 90)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x769cfeca87e0 *.LC2>)) "main.c":22:5 82 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg:DI 90)) "main.c":22:5 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x769cfeca87e0 *.LC2>)
            (nil))))
(insn 35 34 36 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":22:5 85 {*movqi_internal}
     (nil))
(call_insn 36 35 37 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x769cfefcca00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":22:5 1013 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 37 36 38 4 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])) "main.c":23:5 83 {*movsi_internal}
     (nil))
(insn 38 37 39 4 (set (reg:SI 4 si)
        (reg:SI 91)) "main.c":23:5 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 39 38 40 4 (set (reg:DI 92)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x769cfeca87e0 *.LC2>)) "main.c":23:5 82 {*movdi_internal}
     (nil))
(insn 40 39 41 4 (set (reg:DI 5 di)
        (reg:DI 92)) "main.c":23:5 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x769cfeca87e0 *.LC2>)
            (nil))))
(insn 41 40 42 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":23:5 85 {*movqi_internal}
     (nil))
(call_insn 42 41 85 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x769cfefcca00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":23:5 1013 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(jump_insn 85 42 86 4 (set (pc)
        (label_ref 59)) "main.c":26:11 996 {jump}
     (nil)
 -> 59)
(barrier 86 85 62)
(code_label 62 86 45 5 5 (nil) [1 uses])
(note 45 62 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 5 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])) "main.c":28:11 83 {*movsi_internal}
     (nil))
(insn 47 46 48 5 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 t+0 S4 A32])
        (reg:SI 93)) "main.c":28:11 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 48 47 49 5 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S4 A64])) "main.c":29:11 83 {*movsi_internal}
     (nil))
(insn 49 48 50 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])
                    (reg:SI 94)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":29:11 246 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 5 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])) "main.c":30:9 83 {*movsi_internal}
     (nil))
(insn 51 50 52 5 (set (reg:SI 4 si)
        (reg:SI 95)) "main.c":30:9 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(insn 52 51 53 5 (set (reg:DI 96)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x769cfeca87e0 *.LC2>)) "main.c":30:9 82 {*movdi_internal}
     (nil))
(insn 53 52 54 5 (set (reg:DI 5 di)
        (reg:DI 96)) "main.c":30:9 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x769cfeca87e0 *.LC2>)
            (nil))))
(insn 54 53 55 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":30:9 85 {*movqi_internal}
     (nil))
(call_insn 55 54 56 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x769cfefcca00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":30:9 1013 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 56 55 57 5 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 t+0 S4 A32])) "main.c":31:11 83 {*movsi_internal}
     (nil))
(insn 57 56 58 5 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S4 A64])
        (reg:SI 97)) "main.c":31:11 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 58 57 59 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":32:11 246 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 59 58 60 6 4 (nil) [1 uses])
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 63 6 (set (reg:SI 83 [ n.1_2 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 n+0 S4 A32])) "main.c":26:14 83 {*movsi_internal}
     (nil))
(insn 63 61 64 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
            (reg:SI 83 [ n.1_2 ]))) "main.c":26:14 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ n.1_2 ])
        (nil)))
(jump_insn 64 63 65 6 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "main.c":26:14 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 62)
(note 65 64 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 7 (set (reg:SI 84 [ _6 ])
        (const_int 0 [0])) "<built-in>":0:0 83 {*movsi_internal}
     (nil))
(code_label 67 66 68 8 3 (nil) [1 uses])
(note 68 67 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 73 8 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ _6 ])) "main.c":34:1 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _6 ])
        (nil)))
(insn 73 69 74 8 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.3192+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 100))
        ]) "main.c":34:1 1387 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 100)
        (nil)))
(jump_insn 74 73 81 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "main.c":34:1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 77)
(note 81 74 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 75 81 76 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x769cfecaf400 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":34:1 1002 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 76 75 77)
(code_label 77 76 82 10 6 (nil) [1 uses])
(note 82 77 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 78 82 79 10 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) "main.c":34:1 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ <retval> ])
        (nil)))
(insn 79 78 0 10 (use (reg/i:SI 0 ax)) "main.c":34:1 -1
     (nil))
